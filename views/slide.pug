extends layout

block content
    div(class='container')
        div(class='card mb-4')
            div(class='card-header')  #{__('SlideshowStatus')}
            div(class='card-body')
                table(class="table table-hover table-striped rounded-3 overflow-hidden")
                    thead(id='mode-head')
                    tbody(id='mode-content')
                        tr()
                            td() #{__('Loading')}

        div(class='card mb-4')
            div(class='card-header') #{__('SlideshowSettings')}
            div(class='card-body')
                form(method='post' enctype='multipart/form-data' action='/slide/save' id='slide_save')
                    div(class='pt-2')
                        select(class='form-select' id='SLIDE_DIRS' name='SLIDE_DIRS' multiple required)
                            each dir in imageContainers
                                - if (data.directories.includes(dir))
                                    option(value=dir selected) #{dir}
                                - else
                                    option(value=dir) #{dir}

                    div(class='d-grid gap-2 pt-2')
                        input(type='checkbox' class='btn-check' id='SLIDE_RANDOM' name='SLIDE_RANDOM' checked=data.doRandom autocomplete='off')
                        label(class='btn btn-outline-info bi-shuffle' for='SLIDE_RANDOM' id='SLIDE_RANDOM_LABEL')  #{__('RandomOrder')}

                        input(type='checkbox' class='btn-check' id='SLIDE_NAMES' name='SLIDE_NAMES' checked=data.showNames autocomplete='off')
                        label(class='btn btn-outline-info bi-eye' for='SLIDE_NAMES' id='SLIDE_NAMES_LABEL')  #{__('ShowNames')}

                    div(class='input-group pt-2')
                        span(class='input-group-text') #{__('TimePerImage')}
                        input(type='number' class='form-control' min='5' max='300' id='SLIDE_IMAGE_TIME' name='SLIDE_IMAGE_TIME' value=data.timePerSlide autocomplete='off')
                        span(class='input-group-text') s

                    div(class='input-group pt-2')
                        span(class='input-group-text') #{__('TransitionPeriod')}
                        input(type='number' class='form-control' min='0' max='1000' id='SLIDE_TRANSITION_TIME' name='SLIDE_TRANSITION_TIME' value=data.transitionTime autocomplete='off')
                        span(class='input-group-text') ms
                    br
                    div(class='d-grid')
                        button(type='submit' class='btn btn-primary bi-floppy')  #{__('Save')}
        div(class='card mb-4')
            div(class='card-header') #{__('SlideshowControl')}
            div(class='card-body')
                form(method='post' enctype='multipart/form-data' action='/slide/start' id='slide_start')
                    div(class='input-group pb-2')
                        span(class='input-group-text') #{__('Duration')}
                        input(type='number' class='form-control' min='0' id='SLIDE_SHOW_HOURS' name='SLIDE_SHOW_HOURS' autocomplete='off')
                        span(class='input-group-text') h
                        input(type='number' class='form-control' min='0' max='59' id='SLIDE_SHOW_MINUTES' name='SLIDE_SHOW_MINUTES' autocomplete='off')
                        span(class='input-group-text') m
                    button(type='submit' class='btn btn-success bi-play-circle w-100')  #{__('Start')}
                hr
                form(method='post' enctype='multipart/form-data' action='/slide/stop' class='pt-2')
                    button(type='submit' class='btn btn-warning bi-stop-circle w-100')  #{__('Stop')}

    script.
        function updateSlideshowStatus() {
            $.ajax({
                url: '/slide/status',
                method: 'GET',
                success: function(data) {
                    $('#mode-head').empty();
                    $('#mode-content').empty();
                    $('#mode-head').append(
                        "<tr>" +
                            "<th>" + '#{__('Key')}' + "</td>" +
                            "<th>" + '#{__('Value')}' + "</td>" +
                        "</tr>"
                    );

                    addTableRow('#mode-content', '#{__('Active')}', data.active);

                    if ( data.active && Object.keys(data.status).length > 0 )
                    {
                        const path_parts = data.status.image_path.split('/');
                        const image_name = path_parts[path_parts.length - 1];
                        const image_container = path_parts[path_parts.length - 2];
                        const image_resolution = data.status.image_width + "x" + data.status.image_height
                        const last_switch = new Date(data.status.timestamp * 1000);

                        addTableRow('#mode-content', '#{__('Image')}', image_name);
                        addTableRow('#mode-content', '#{__('Directory')}', image_container);
                        addTableRow('#mode-content', '#{__('ImageResolution')}', image_resolution);
                        addTableRow('#mode-content', '#{__('ImageIndex')}', data.status.image_number);
                        addTableRow('#mode-content', '#{__('TotalImages')}', data.status.total_images);
                        addTableRow('#mode-content', '#{__('LastSwitch')}', last_switch.toLocaleString());
                    }

                },
                error: function(err) {
                    console.error('Error fetching display information:', err);
                }
            });
        }

        function addTableRow(table_id, key, value) {
            $(table_id).append(
                "<tr>" +
                    "<td>" + key + "</td>" +
                    "<td>" + value + "</td>" +
                "</tr>"
            );
        }

        $(document).ready(() => {
            updateSlideshowStatus();
            setInterval(updateSlideshowStatus, 2000);
        });