extends layout

block content
    div(class='container')
        div(class='card mb-4')
            div(class='card-header') #{__('UploadImages')}
            div(class='card-body')
                form(method='post' enctype='multipart/form-data' action='/image/upload' id='image_upload')
                    select(class='form-control custom-select' id='fdirn' name='fdirn' required)
                        option(value='' selected disabled hidden) > #{__('SelectDirectory')} <
                        each dir in dirs
                            option(value=dir) #{dir}
                    div(class='pt-2')
                        input(type='file' class='form-control' id='fimgn' name='fimgn' accept='image/png, image/jpeg' multiple required)
                    div(class='d-grid pt-2')
                        button(type='submit' class='btn btn-primary bi-upload')  #{__('UploadImages')}
        div(class='card mb-4')
            div(class='card-header') #{__('ViewImages')}
            div(class='card-body')
                select(class='form-control custom-select' id='fdirv' name='fdirv' required)
                    option(value='' selected disabled hidden) > #{__('SelectDirectory')} <
                    each dir in dirs
                        option(value=dir) #{dir}
                div(class='pt-2 d-flex w-100 justify-content-center align-items-center')
                    ul(id='fimgv')
        div(class='card mb-4')
            div(class='card-header') #{__('DeleteImages')}
            div(class='card-body')
                form(method='post' enctype='multipart/form-data' action='/image/delete' id='image_delete')
                    select(class='form-control custom-select' id='fdird' name='fdird' required)
                        option(value='' selected disabled hidden) > #{__('SelectDirectory')} <
                        each dir in dirs
                            option(value=dir) #{dir}
                    div(class='pt-2')
                        select(class='form-control custom-select' id='fimgd' name='fimgd' size='5' multiple required)
                            option(value='' selected disabled hidden) > #{__('SelectImages')} <
                    div(class='pt-2 d-grid')
                        button(type='submit' class='btn btn-danger bi-trash' id='fimage_delete' disabled)  #{__('DeleteImages')}
    div(id='img_div' hidden) #{imgs}

    div(class='modal fade' id='pmodal' tabindex='-1' role='dialog' aria-labelledby='pmodal_header' aria-hidden='true')
        div(class='modal-dialog modal-dialog-centered' role='document')
            div(class='modal-content')
                div(class='modal-header')
                    h5(class='modal-title' id='pmodal_header') #{__('Progress')}
                div(class='modal-body' id='pmodal_text')
                    div() #{__('ImagesAreUploaded')}...
                    br
                    div(class="progress" style='height: 25px;')
                        div(class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%" id='progress')

    script(src='javascripts/confirm.js')
    script.
        var viewerInstance = null;

        function generateShowIndices(count, len) {
            if (count > len) {
                return Array.from({ length: len }, (_, index) => index);
            } else {
                const result = [0, len - 1];
                const remaining = count - 2;
                if (remaining > 0) {
                    const step = Math.floor((len - 1) / (remaining + 1));

                    for (let i = 1; i <= remaining; i++) {
                        const newValue = i * step;
                        result.splice(i, 0, newValue);
                    }
                }
                return result;
            }
        }

        async function loadViewerImages(container) {
            const response = await fetch(`/image/list/${container}`);
            const images = await response.json();

            const viewer = $('#fimgv');
            viewer.empty();

            const indices = generateShowIndices(9, images.length);

            for (const [index, img] of images.entries()) {
                var hidden = 'class="hidden"';
                if (indices.includes(index)) {
                    hidden = "";
                }
                viewer.append(`<li ${hidden}><img src="/image/view/${container}/${img}" alt="${img}"></li>`);
            }

            viewerInstance = new Viewer(
                viewer[0],
                {
                    toolbar: true,
                    navbar: false,
                    title: true,
                }
            );
        }

        $('#fdirv').on('input', function() {
            if (viewerInstance !== null) {
                viewerInstance.destroy();
            }

            var selected = $('#fdirv').val();
            loadViewerImages(selected);
        });

        $('#fdird').on('input', function() {
            $('#fimage_delete').prop('disabled', true);
        });

        $('#fimgd').on('input', function() {
            var hasSelected = false;
            $('#fimgd :selected').each(function() {
                if ($(this).val() != '')
                    hasSelected = true;
            });
            $('#fimage_delete').prop('disabled', !hasSelected);
        });

        var img_data = JSON.parse($('#img_div').html())
        $('#fdird').on('input', function() {
            $('#fimgd').empty();

            var selected = $('#fdird').val();
            var imgs = img_data[selected];
            imgs.forEach((image) => {
                $('#fimgd').append('<option value=' + image + '>' + image + '</option>');
            });
        });

        custom_confirm_fst('#image_delete', '#{__('DeleteImages')}', '#{__('ImagesDeleteConfirm')}', '#{__('No')}', '#{__('Yes')}');

        $('#image_upload').on('submit', function() {
            $('#pmodal').modal({
                backdrop: false
            });
            $('#pmodal').modal('show');

            var imgAll = $('#fimgn')[0].files.length;
            var imgCount = 0;
            var interval = setInterval(function() {
                imgCount += 1;
                var progress = parseInt(100 * imgCount / imgAll);
                $('#progress').css('width', progress + '%')
                    .attr('aria-valuenow', progress)
                    .text(imgCount + '/' + imgAll);
                if (imgCount >= imgAll)
                    clearInterval(interval);
            }, 5000);
        });

    style.
        #fimgv {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
            gap: 10px;
            padding: 0;
            list-style: none;
            margin: 0;
        }

        #fimgv li {
            display: flex;
            justify-content: center;
            align-items: center;
            border: 1px solid #ccc;
            border-radius: 5px;
            overflow: hidden;
            background-color: #f9f9f9;
            cursor: pointer;
        }

        #fimgv li img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease-in-out;
        }

        #fimgv li img:hover {
            transform: scale(1.05);
        }

        .hidden {
            display: none !important;
        }